<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gam0022.net</title>
    <link>https://gam0022.net/tags/sessions/index.xml</link>
    <description>Recent content on gam0022.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>&amp;copy; 2021 gam0022</copyright>
    <atom:link href="/tags/sessions/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SESSIONS 2023のGLSL Graphics Compoで準優勝しました（グラフィックス解説）</title>
      <link>https://gam0022.net/blog/2023/05/31/sessions2023-glsl-compo/</link>
      <pubDate>Wed, 31 May 2023 06:49:24 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2023/05/31/sessions2023-glsl-compo/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;2023年4月28日～30日にツインメッセ静岡で開催された&lt;a href=&#34;https://sessions.frontl1ne.net/&#34;&gt;SESSIONS in C4 LAN 2023 SPRING&lt;/a&gt;に参加し、GLSL Graphics Compo部門で2位をいただきました！&lt;/p&gt;

&lt;p&gt;作品のタイトルは『Transcendental Cube』で、シンプルな立方体が複雑なジオメトリーに変形していく非現実的な様子を、写実的で迫力ある映像で表現することをコンセプトにしました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/194E3UWj870&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;GLSL Graphics Compoのレギュレーションとして音楽は含められませんが、イベント後の動画用に&lt;a href=&#34;https://twitter.com/sadakkey&#34;&gt;@sadakkey&lt;/a&gt;さんに素晴らしい音楽を制作していただきました。この場を借りて、心から感謝の意を表します！&lt;/p&gt;

&lt;p&gt;以下は『Transcendental Cube』の各種リンクです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://youtu.be/194E3UWj870&#34;&gt;📺 YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shadertoy.com/view/dldGzj&#34;&gt;👁️ Shadertoy&lt;/a&gt; ※高負荷のためRTX3080以上のGPU推奨&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pouet.net/prod.php?which=94339&#34;&gt;📦 Pouet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&amp;quot;Transcendental Cube&amp;quot; &lt;br&gt;&lt;br&gt;2nd place at GLSL Graphics Compo, &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; 2023 🥈&lt;br&gt;&lt;br&gt;SESSIONS 2023のGLSL Graphics Compoで2位を勝ち取りました！ &lt;a href=&#34;https://t.co/Ra2Y0Ccfpx&#34;&gt;pic.twitter.com/Ra2Y0Ccfpx&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1653096277184503808?ref_src=twsrc%5Etfw&#34;&gt;May 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;GLSL Graphics Compo の2位でした！&lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/ihD5DfiNz2&#34;&gt;pic.twitter.com/ihD5DfiNz2&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1652527603247616001?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;5月25日に&lt;a href=&#34;https://teamlab.connpass.com/event/282028/&#34;&gt;SESSIONS 2023 AFTER PARTY＠teamLab Office&lt;/a&gt;が開催され、そこで本作品の技術的な解説を行いました。&lt;/p&gt;

&lt;p&gt;その発表資料はこちらです。&lt;/p&gt;

&lt;div class=&#34;google-slide-wrap&#34;&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vRElQgUpyWO1kAOOvmckhu2PAfVZHoRrIU7S59o8MrSMSQpz4LLBUuK1_X20tGZ8S8eSK9-dSkIyYo3/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;1440&#34; height=&#34;839&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;この記事では、スライドの画像を使用しながら、作品の解説をします。&lt;/p&gt;

&lt;h1 id=&#34;glsl-graphics-compoとは&#34;&gt;GLSL Graphics Compoとは？&lt;/h1&gt;

&lt;p&gt;デモシーンの文化に馴染みのない方に向けて、簡単にGLSL Graphics Compoの概要やレギュレーションについて説明します。&lt;/p&gt;

&lt;p&gt;GLSL Graphics Compoは&lt;a href=&#34;https://twigl.app/&#34;&gt;twigl&lt;/a&gt;上でリアルタイムで動作するGLSLのシェーダーによるグラフィックスを競うコンポです。
コンポはコンペティションの意味で、参加者投票によって順位が決まります。&lt;/p&gt;

&lt;h2 id=&#34;glslシェーダーで映像を作り出す魔法&#34;&gt;GLSLシェーダーで映像を作り出す魔法&lt;/h2&gt;

&lt;p&gt;GLSLシェーダーを使用して、プログラミングのソースコードだけで映像を作り出すことができるのですが、一般的には想像しづらいかもしれません。&lt;/p&gt;

&lt;p&gt;具体的なイメージを掴むために、以下の図をご覧ください。GLSLのコードをコメントや改行、空白文字を取り除いて処理の内容で色分けしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/slide-glsl-code.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/slide-glsl-code.png&#34; alt=&#34;コメントと空白を削除したGLSLのコード全体&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;この9270文字のGLSLシェーダーに、映像のすべてが実装されています。&lt;/p&gt;

&lt;p&gt;実は、このシェーダーにはシーンのモデリング、ライティング、カメラワーク、演出のシーケンスがすべて含まれているのです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3Dモデルやテクスチャなどの外部アセットは一切使用していません。すべての3Dデータやテクスチャは、GLSLのコードからプロシージャルに生成されています。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;もちろん、変数名や関数名を1文字に短縮したり、デバッグ用のコードを削除することで文字数をさらに削減することも可能です。しかし、今回は文字数削減よりも可読性を重視してコーディングしました。&lt;/p&gt;

&lt;h2 id=&#34;webgl2-0が利用可能に&#34;&gt;WebGL2.0が利用可能に&lt;/h2&gt;

&lt;p&gt;SESSIONS 2023では、twiglの&lt;code&gt;classic (300 es)&lt;/code&gt;モードが許可されたので、WebGL2.0の機能も利用できるようになりました！&lt;/p&gt;

&lt;p&gt;TokyoDemoFest2021ではGLSL Snadboxがレギュレーションとなっており、WebGL1.0の機能しか使えないという制約があったのですが、今回から配列やビット演算などが利用できるようになりました。&lt;/p&gt;

&lt;p&gt;twiglはWeb上でGLSLのフラグメントシェーダーを編集・実行できるWebGLで実装されたサービスです。&lt;/p&gt;

&lt;p&gt;類似サービスにはGLSL SnadboxやShadertoyなどがありますが、
twiglは &lt;a href=&#34;https://twitter.com/search?q=%23%E3%81%A4%E3%81%B6%E3%82%84%E3%81%8DGLSL&amp;amp;src=hashtag_click&#34;&gt;#つぶやきGLSL&lt;/a&gt; と呼ばれる1ツイートに収まる文字数でGLSLのシェーダー作品を作る文化に特化しています。&lt;/p&gt;

&lt;p&gt;ちなみに今回のGLSL Graphics Compoには文字数の制約はありませんでした。
そのためか上映時間が3分あるような超大作の作品も複数ありました。
文字数に制約はありませんが、複雑すぎるGLSLのコードはコンパイルに時間がかかりすぎてChromeがクラッシュするので、GLSLのコンパイル時間が実質的なコードサイズの制限になります。&lt;/p&gt;

&lt;h2 id=&#34;ローカル上の開発環境の構築&#34;&gt;ローカル上の開発環境の構築&lt;/h2&gt;

&lt;p&gt;node.jsを使用した自作のWebGLフレームワーク（&lt;a href=&#34;https://github.com/gam0022/chromatiq/tree/sessions2023&#34;&gt;chromatiq&lt;/a&gt;）を活用して、ローカル上の開発環境を構築しました。
このフレームワークを使うと、VS Codeでシェーダーを編集し、Chromeでホットリロードが可能です。&lt;/p&gt;

&lt;p&gt;直接twiglやShadertoy上で編集することも可能ですが、ローカル環境を構築するメリットは複数あります。たとえば、コードの自動整形、バージョン管理、時間のシークバーなどが実現できます。&lt;/p&gt;

&lt;p&gt;また、twiglへのポーティングの作業は、以前の記事で紹介したテンプレートを利用しました。
chromatiq用のシェーダーのuniform名はShadertoy互換があるため、&lt;code&gt;Shadertoy → twigl (classic 300es)&lt;/code&gt;のテンプレートが利用可能です。
ポーティングの手順は非常に簡単で、テンプレートのGLSLのコードを先頭にコピー＆ペーストするだけで移植作業が完了します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/blog/2019/03/04/porting-from-shadertoy-to-glslsandbox/&#34;&gt;先頭にコピペするだけ！Shadertoy → GLSL Sandbox / NEORT の移植用ヘッダーコードの紹介 | gam0022.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;mad-tracingによるライティング&#34;&gt;Mad Tracingによるライティング&lt;/h1&gt;

&lt;p&gt;ライティングでは次の2つをゴールとしました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Global Illumination&lt;/li&gt;
&lt;li&gt;Bloom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/lighting-features.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/lighting-features.png&#34; alt=&#34;ライティングの特徴（Global IlluminationとBloomの両立）&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一般的に、Bloomはマルチパスのポストエフェクトとして実装する必要がありますが、
GLSL Graphics Compoのレギュレーションでは1Passでの実装が必要です。
そこで、1PassでGIとBloomの両方を実現するためにMad Tracingという手法を利用しました。&lt;/p&gt;

&lt;p&gt;Mad Tracingは&lt;a href=&#34;https://twitter.com/Virgill74&#34;&gt;Virgill&lt;/a&gt;さんが開発した手法で、&lt;a href=&#34;https://www.youtube.com/watch?v=5lR76o9lWB0&#34;&gt;End of time&lt;/a&gt;という2018年に発表された4K Introのデモではじめて利用されました。&lt;/p&gt;

&lt;p&gt;Mad Tracingをざっくり説明すると、Path Tracingの亜種のような手法です。
通常のPath Tracingでは、Bloom効果を実現することはできませんが、Mad TracingではBloom効果も含めて計算することが可能です。&lt;/p&gt;

&lt;h2 id=&#34;path-tracing&#34;&gt;Path Tracing&lt;/h2&gt;

&lt;p&gt;Path TracingはGlobal Illuminationを実現可能でフォトリアルなグラフィックスが得意な手法です。&lt;/p&gt;

&lt;p&gt;下記の図のようにBRDFに応じて確率的に反射方向をサンプリングしてレイを大量に飛ばすことで、光源からの影響を計算します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/pathtracing-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/pathtracing-1.png&#34; alt=&#34;パストレーシング①&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下記はGlossyなマテリアルの球体のレンダリング結果と、そのマテリアルのBRDFの反射方向の分布を示した図です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/pathtracing-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/pathtracing-2.png&#34; alt=&#34;パストレーシング②&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Glossyなマテリアルでは、球体の周囲の映り込みがブラー（ぼかし）されていることが分かります。このブラーは、レイを複数方向にサンプリングし、その結果を平均することで実現されています。&lt;/p&gt;

&lt;p&gt;難しいことは分からなくても、レイを複数方向に飛ばすことで、ブラー（ぼかし）されるイメージだけ理解できれば問題ありません。&lt;/p&gt;

&lt;h2 id=&#34;レイマーチングとmad-tracing&#34;&gt;レイマーチングとMad Tracing&lt;/h2&gt;

&lt;p&gt;Mad TracingではPath Tracingと同じように表面のroughnessに応じてセカンダリレイを飛ばしてGIを計算します。&lt;/p&gt;

&lt;p&gt;通常のパストレーシングでは物体の表面にヒットしてからセカンダリレイを複数回飛ばすと思いますが、
Mad Tracingではレイマーチングのステップ中にセカンダリレイを近傍のオブジェクトのroughnessに応じて飛ばします。&lt;/p&gt;

&lt;p&gt;ここでレイマーチングとMad Tracingのレイの進む様子を示した図を紹介します。&lt;/p&gt;

&lt;h3 id=&#34;レイマーチングのループの様子&#34;&gt;レイマーチングのループの様子&lt;/h3&gt;

&lt;p&gt;次の図はレイマーチングのループの様子です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/raymarching.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/raymarching.png&#34; alt=&#34;レイマーチングのループの様子&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;レイがRayOriginからスタートして、このようにステップごとにRayDirection方向に進んでいきます。
レイマーチングを勉強したことがある人ならおそらく見覚えのある図です。&lt;/p&gt;

&lt;h3 id=&#34;mad-tracingのループの様子&#34;&gt;Mad Tracingのループの様子&lt;/h3&gt;

&lt;p&gt;そして次の図はMad Tracingのループの様子です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing.png&#34; alt=&#34;Mad Tracingのループの様子&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mad Tracingは、レイマーチングのループ中に周囲の空間をサンプリングします。
レイの先端を &lt;code&gt;ro2（ray origin 2）&lt;/code&gt; として、そこからセカンダリーのレイを発射します。この操作をレイマーチングの各ステップで行います。&lt;/p&gt;

&lt;p&gt;こうしてレイの周囲の空間からの光源の影響も蓄積することで、Bloomの効果を1Passで実現できます。&lt;/p&gt;

&lt;p&gt;これによってボリューム感やBloom感のあるライティングを実現できます。その代償として、少々負荷が高い印象です。&lt;/p&gt;

&lt;h2 id=&#34;mad-tracingのコード解説&#34;&gt;Mad Tracingのコード解説&lt;/h2&gt;

&lt;p&gt;実際のGLSLのコードを踏まえてMad Tracingのコード解説します。&lt;/p&gt;

&lt;h3 id=&#34;map関数を2回参照&#34;&gt;map関数を2回参照&lt;/h3&gt;

&lt;p&gt;単なるレイマーチングにも見えますが、よく見るとmap関数を2回呼び出していることが分かります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code1.png&#34; alt=&#34;map関数を2回参照&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2つ目のサンプリングであるm2の行は、周囲の空間のサンプリングです。&lt;/p&gt;

&lt;h3 id=&#34;if分岐なしでbloom用-gi用のサンプリングを処理&#34;&gt;if分岐なしでBloom用／GI用のサンプリングを処理&lt;/h3&gt;

&lt;p&gt;map関数の返り値はvec4になっており、xにdistance（レイから物体表面への最短距離）が格納されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code2.png&#34; alt=&#34;if分岐なしにBloom用のサンプリングとGI用のサンプリングを両立&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;通常のレイマーチングでは&lt;code&gt;distance &amp;lt; eps&lt;/code&gt;になったらレイとオブジェクトが衝突したとみなしてループを抜けますが、Mad Tracingでは衝突後もループを継続します。&lt;/p&gt;

&lt;p&gt;衝突後にはro2（セカンダリレイの原点）は衝突した点に固定化されるため、Bloom用のサンプリングからPath Tracingのサンプリングにif分岐なしに自動的に切り替わります。&lt;/p&gt;

&lt;p&gt;このようにしてif分岐なしにBloom用のサンプリングとGI用のサンプリングを両立しているのです。&lt;/p&gt;

&lt;h3 id=&#34;ボリュームレンダリング&#34;&gt;ボリュームレンダリング&lt;/h3&gt;

&lt;p&gt;レイマーチングのステップに0.25や0.15の係数を乗算しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code3.png&#34; alt=&#34;ボリュームレンダリング&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これはステップの間隔を小さくしてボリュームレンダリングを行うためです。
ステップの間隔が大きすぎるとBloomのアーティファクトが発生しやすくなります。
逆にステップの間隔が小さすぎると負荷が高くなるので、品質と負荷のトレードオフを考慮して係数を決定しました。&lt;/p&gt;

&lt;h3 id=&#34;アーティファクト防止&#34;&gt;アーティファクト防止&lt;/h3&gt;

&lt;p&gt;レイのスタート位置に乱数でオフセットを加えることで、ボリュームレンダリングのアーティファクトを防止しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code4.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code4.png&#34; alt=&#34;アーティファクト防止&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;オリジナルのMad Tracingにはない処理ですが、効果が大きかったので追加しました。&lt;/p&gt;

&lt;h3 id=&#34;コンパイル時間短縮&#34;&gt;コンパイル時間短縮&lt;/h3&gt;

&lt;p&gt;この処理はGLSLのコンパイル時間短縮が目的です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code5.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/madtracing-code5.png&#34; alt=&#34;コンパイル時間短縮&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;forループがunroll（展開）されるとコンパイル時間が伸びるので、絶対に実行されないifによって強制的にダイナミックループにしてunrollを防ぎます。&lt;/p&gt;

&lt;p&gt;HLSLでは&lt;code&gt;[unroll]&lt;/code&gt;や&lt;code&gt;[loop]&lt;/code&gt;を明示的に指定が可能ですが、GLSLではこのようなハックが必要となります。&lt;/p&gt;

&lt;h1 id=&#34;ifsによるモデリング&#34;&gt;IFSによるモデリング&lt;/h1&gt;

&lt;p&gt;モデリングに関しては、シンプルなCubeをIFS（Iterated Function System）を使用して複雑にしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs.png&#34; alt=&#34;IFSによるモデリング&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上の図は、CubeとそれにIFSを適用した結果を示しています。この結果を得るために使用したGLSLのコードは以下の通りです。&lt;/p&gt;

&lt;p&gt;IFSの理解を深めるためにはコードを確認するのが近道だと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-code.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-code.png&#34; alt=&#34;IFSによるモデリングのGLSLのコード&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このコードでは、forループの中でいくつかの空間操作（折りたたみ、平行移動、回転）を行い、その後通常通りにCubeの距離関数を計算しています。&lt;/p&gt;

&lt;p&gt;IFSについては、&lt;a href=&#34;https://twitter.com/gaziya5&#34;&gt;@gaziya5&lt;/a&gt;さんの&lt;a href=&#34;https://neort.io/product/bvcrf5s3p9f7gigeevf0&#34;&gt;SDF for raymarching (距離関数のスキル)&lt;/a&gt;の記事がとても参考になります。&lt;/p&gt;

&lt;h2 id=&#34;unityを利用したパラメーター調整&#34;&gt;Unityを利用したパラメーター調整&lt;/h2&gt;

&lt;p&gt;IFSの実装自体は比較的簡単で、forループの中で適切な空間操作を行うだけです。&lt;/p&gt;

&lt;p&gt;一方、IFSのパラメーターの調整は非常に難しいです。今回紹介したIFSのパラメーターは6次元（平行移動3次元 + 回転3次元）です。
6次元の広大なパラメーター空間から、美しい絵を描くための適切なパラメーターを見つける必要があります。
この作業はまさに砂漠からオアシスを見つけるようなものであり、試行錯誤が必要です。&lt;/p&gt;

&lt;p&gt;また、通常は6次元よりもさらに次元数が増えていくことが一般的です。&lt;/p&gt;

&lt;p&gt;今回はUnityでパラメーター調整してからGLSLに移植する形でモデリングを行いました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-unity.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-unity.png&#34; alt=&#34;Unityでパラメーター調整&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unityで調整しているのは以下のような理由からです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;インスペクターで値の操作がしやすい&lt;/li&gt;
&lt;li&gt;Undo/Redoができる&lt;/li&gt;
&lt;li&gt;カメラの操作がしやすい&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;モデリングの試行錯誤&#34;&gt;モデリングの試行錯誤&lt;/h2&gt;

&lt;p&gt;制作初期（4月15日）の段階では、複雑なジオメトリーでしたが、最終的にはシンプルに落ち着きました。&lt;/p&gt;

&lt;p&gt;この変更の理由は、Mad Tracingによって得られるライティング情報量の存在です。ジオメトリーの情報量を抑えることで、ライティングもモデリングの情報量がバランスの取れた結果を得ることができると考えました。&lt;/p&gt;

&lt;p&gt;また、モデリングが複雑になると見た目がごちゃごちゃしてしまい、キビキビと変形させたときのかっこよさも損なわれると感じました。&lt;/p&gt;

&lt;p&gt;さらに、ライティングとモデリングの情報量が最大限になると、GPU負荷や動画のビットレートなどにも負荷がかかることが予想されました。そのため、最終的な判断として情報量を適切に制御することとしました。&lt;/p&gt;

&lt;p&gt;これによって、よりバランスの取れた作品を実現することができました。&lt;/p&gt;

&lt;h3 id=&#34;プロトタイプ-unity&#34;&gt;プロトタイプ（Unity）&lt;/h3&gt;

&lt;p&gt;UnityでIFSのパラメーターを試行錯誤している段階では、このようにかなり情報量の多い複雑なジオメトリーでした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-1.png&#34; alt=&#34;プロトタイプ（Unity）1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-2.png&#34; alt=&#34;プロトタイプ（Unity）2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-3.png&#34; alt=&#34;プロトタイプ（Unity）3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-4.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-unity-4.png&#34; alt=&#34;プロトタイプ（Unity）4&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;プロトタイプ-glsl&#34;&gt;プロトタイプ（GLSL）&lt;/h3&gt;

&lt;p&gt;最終的にボツになりましたが、このようなモデリングの試作もしていました。ネタ供養です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-1.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-1.png&#34; alt=&#34;プロトタイプ（Unity）1&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-2.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-2.png&#34; alt=&#34;プロトタイプ（Unity）2&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-3.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-3.png&#34; alt=&#34;プロトタイプ（Unity）3&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-4.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/modeling-ifs-prototype-shadertoy-4.png&#34; alt=&#34;プロトタイプ（Unity）4&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;ifsのバリエーション&#34;&gt;IFSのバリエーション&lt;/h3&gt;

&lt;p&gt;中盤の複雑なIFSのシーンもパラメーター調整のみで実現しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/chromatiq5096.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/chromatiq5096.png&#34; alt=&#34;IFSのバリエーション&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;壁面の演出&#34;&gt;壁面の演出&lt;/h1&gt;

&lt;p&gt;部屋のジオメトリーは非常にシンプルで、装飾のない完全な直方体です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall.png&#34; alt=&#34;壁面の演出&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このシンプルなデザインは、Mad Tracingによる反射の効果を最大限に活かすために採用しました。&lt;/p&gt;

&lt;p&gt;床や壁のシンプルなジオメトリーにより、反射の美しさを引き立たせることができます。周囲の光やオブジェクトが壁面に反射されることで、部屋全体に深みと立体感が生まれます。
さらに、壁面には複数のEmissive（発光）のパターンを取り入れました。壁面の発光パターンにより、部屋の情報量を増やすことができます。
壁面からの発光パターンは、光のダイナミクスや環境の雰囲気を演出する一方、シンプルなジオメトリーとの対比も生み出します。&lt;/p&gt;

&lt;p&gt;結果として、シンプルな部屋のジオメトリーと複雑な壁面のEmissiveのパターンとMad Tracingによる反射の効果が組み合わさり、情報量のバランスがとれた空間を実現できたと思います。&lt;/p&gt;

&lt;h2 id=&#34;ノイズの壁面パターン&#34;&gt;ノイズの壁面パターン&lt;/h2&gt;

&lt;p&gt;序盤の壁面のパターンは、David Hoskinsさんによる有名なHash without Sineによる疑似乱数です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall-noise.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall-noise.png&#34; alt=&#34;ノイズの壁面パターン&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mad Tracingのアーティファクト防止に利用したhash（擬似的なランダム値を返す関数）関数を再利用しました。&lt;/p&gt;

&lt;p&gt;uv座標に対してfloorを適用してからhashを呼び出すことで、解像度を下げることができます。この結果、QRコードのような雰囲気にできました。&lt;/p&gt;

&lt;h2 id=&#34;警告の壁面パターン&#34;&gt;警告の壁面パターン&lt;/h2&gt;

&lt;p&gt;中盤の警告の壁面パターンでは、六角形のタイルの中心にランダムなマークを描画しました。&lt;/p&gt;

&lt;p&gt;マークには大きく2種類あります。1つ目はSESSIONSのロゴにも使用されている斜めのストライプのパターンであり、もう1つは2DのIFSによって生成されるパターンです。&lt;/p&gt;

&lt;p&gt;2DのIFSパターンは、以下のようなコードで生成されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall-warning.png&#34;&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2023-05-29-sessions2023-glsl-compo/wall-warning.png&#34; alt=&#34;警告の壁面パターン&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IFSは3DのCubeのモデリングでも使用していましたが、もちろん2Dでも利用できます。&lt;/p&gt;

&lt;p&gt;IFSの処理は、Cubeの場合とほぼ同じです。折りたたみ、平行移動、回転などの操作を行います。&lt;/p&gt;

&lt;p&gt;異なる点は、3DではXYZの各軸に対して3回の回転を行っていたのに対し、2Dでは1回の回転で済むことです。&lt;/p&gt;

&lt;p&gt;IFSのパラメーターは事前に調整され、8つのバリエーションを配列に定義しました。六角形のグリッドごとに乱数を生成し、ランダムにパターンを選択するように設定しました。これにより、パターンのバリエーションが豊かになります。&lt;/p&gt;

&lt;h3 id=&#34;neort-上でのリアル空間展示&#34;&gt;NEORT++上でのリアル空間展示&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://neort.io/challenge/ch4hvjsn70rhlpf0n460&#34;&gt;#CURATION_FREE_2&lt;/a&gt;はSESSIONS直後に開催され、タイミングが良かったので参加しました。&lt;/p&gt;

&lt;p&gt;警告のパターンを取り出してNEORTに移植し、NEORT++の展示室に展示させていただきました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;デジタルアートの新しい体験について考える東京馬喰町のアートギャラリーNEORT++にて5/6, 7に開催される展示”CURATION FREE #2”の作品を募集します。&lt;/p&gt;

&lt;p&gt;本展は、昨年末に行われたキュレーションを介さない展示&amp;rdquo;CURATION FREE&amp;rdquo;の第二弾です。&lt;/p&gt;

&lt;p&gt;期間中、NEORTに投稿された作品が東京馬喰町にあるNEORT++の空間に展示されていきます。&lt;/p&gt;

&lt;p&gt;どんな展示になるか予想ができませんが、表現の多様性を尊重した新しい試みになることを期待します。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-conversation=&#34;none&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Real &amp;quot;Transcendental Cube&amp;quot;&lt;br&gt;&lt;br&gt;&amp;quot;Transcendental Cube&amp;quot; の壁面の演出の一部をNEORTに移植して &lt;a href=&#34;https://twitter.com/hashtag/CURATION_FREE_2?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CURATION_FREE_2&lt;/a&gt; のday1に展示しました。&lt;br&gt;&lt;br&gt;（同じような動画を連投して申し訳ないですが、前の動画の画質が微妙だったので…）&lt;a href=&#34;https://twitter.com/hashtag/CURATION_FREE_2?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CURATION_FREE_2&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/Un1t8rBc2m&#34;&gt;pic.twitter.com/Un1t8rBc2m&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/status/1654880194287763456?ref_src=twsrc%5Etfw&#34;&gt;May 6, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;NEORT++の展示室もシンプルな直方体でしたので、作品中のような見え方になるのではないかと期待していました。しかし、実際はそんなことはありませんでした。&lt;/p&gt;

&lt;p&gt;パソコンのディスプレイ上で見たときと、現実世界にプロジェクションされたときの差異が大きく、予想していたような映像体験は残念ながら実現しませんでした。&lt;/p&gt;

&lt;p&gt;しかし、多くの作品を鑑賞する中で、さまざまな新たな発見がありました。展示された作品が実際にどのような風に見えるのか、そのパターンや効果を少しずつ理解することができました。この経験は非常に有意義なものでした。&lt;/p&gt;

&lt;p&gt;NEORT++の展示室の環境では思ったような結果にはならなかったのですが、それでもたくさんの作品に触れ、新たな視点やアイデアを得ることができました。今回の経験を活かして今後の自身の制作にも繋げていきたいです。&lt;/p&gt;

&lt;h1 id=&#34;インスピレーションを得た作品の紹介&#34;&gt;インスピレーションを得た作品の紹介&lt;/h1&gt;

&lt;p&gt;『Transcendental Cube』は複数の作品からインスピレーションを得ながら、それらを自分の中で組み合わせることで独自のコンセプトを形成しました。以下では、そのインスピレーションを受けた作品を紹介します。&lt;/p&gt;

&lt;h2 id=&#34;life-by-setchi&#34;&gt;Life by setchi&lt;/h2&gt;

&lt;p&gt;この作品は、TokyoDemoFest 2018のGLSL Graphics Compoで2位に輝いた作品です。&lt;/p&gt;

&lt;p&gt;シンプルなジオメトリーが複雑に変形するコンセプトはここから触発されました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/R4tNEFVz5K8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;delight-by-mercury&#34;&gt;delight by mercury&lt;/h2&gt;

&lt;p&gt;この作品は、Under Construction 2015のCombined Intro Compoで優勝した作品です。&lt;/p&gt;

&lt;p&gt;美しいグローバルイルミネーション、音楽と映像の見事な同期、そして鮮やかな展開が特徴です。部屋をシンプルにすることで反射を際立たせるアイデアも、この作品からの影響を受けました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/UnjIMd3kVf4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;delayed-by-kaneta&#34;&gt;Delayed by kaneta&lt;/h2&gt;

&lt;p&gt;この作品は、&lt;a href=&#34;https://www.shader1weekcompo.org/&#34;&gt;Shader1weekCompo&lt;/a&gt;の第1回（&lt;a href=&#34;https://neort.io/tag/br0kuak3p9f194rkh8tg&#34;&gt;#S1C001&lt;/a&gt;）で発表されました。&lt;/p&gt;

&lt;p&gt;壁面の発光パターンが床に反射する様子が非常にクールだったので、作品の演出に取り入れました。&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/Noe4SsARPVo&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h1 id=&#34;グラフィックス解説のまとめ&#34;&gt;グラフィックス解説のまとめ&lt;/h1&gt;

&lt;p&gt;本記事では『Transcendental Cube』について、そのグラフィックスについて解説しました。&lt;/p&gt;

&lt;p&gt;この記事が読者の皆さんの制作に少しでもお役に立てれば幸いです。&lt;/p&gt;

&lt;h1 id=&#34;sessionsの振り返り&#34;&gt;SESSIONSの振り返り&lt;/h1&gt;

&lt;p&gt;作品のグラフィックス解説からはテーマが外れてしまいますが、最後にSESSIONSの振り返りを記しておきます。&lt;/p&gt;

&lt;h2 id=&#34;オフラインパーティーの魅力&#34;&gt;オフラインパーティーの魅力&lt;/h2&gt;

&lt;p&gt;TokyoDemoFest2018年以来の約5年ぶりのオフライン開催のデモパーティーということで、大勢でデモを鑑賞したり、交流したりと、懐かしくも楽しい時間を過ごせました。&lt;/p&gt;

&lt;p&gt;オンラインのデモパーティーも素晴らしいものですが、会場の雰囲気や臨場感を直接感じられる点で、やはりオフラインイベントには特別な魅力があると感じています。&lt;/p&gt;

&lt;p&gt;実際に参加者と話をしたり、作品についての感想やアイデアを交換したりすることで、新たな視点やインスピレーションを得ることができました。&lt;/p&gt;

&lt;h2 id=&#34;sessionsについて&#34;&gt;SESSIONSについて&lt;/h2&gt;

&lt;p&gt;SESSIONSは2023年から新たにスタートしたデモパーティーです。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;デモパーティーとはコンピューターを用いたプログラミングやアートに興味のある人々が日本中・世界中から一堂に会し、デモ作品のコンペティション (Compo) やセミナーなどが行われるイベントです。
パーティという名の通り、勉強会のように堅苦しい感じではなく、みんな賑やかに作品の制作過程を見せ合ったりと参加者同士でのコミュニケーションが盛んに行われます。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;SESSIONSの前身である&lt;a href=&#34;https://tokyodemofest.jp/&#34;&gt;TokyoDemoFest&lt;/a&gt;は純粋なデモパーティーに属するものでしたが、SESSIONSはそれとは異なり、デモシーンの枠に囚われず、さまざまなカテゴリーのクリエイティブ作品を募集する「パーティ＆コンペティションイベント」として位置づけられています。&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;qme&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/aSwiTfSjYH&#34;&gt;pic.twitter.com/aSwiTfSjYH&lt;/a&gt;&lt;/p&gt;&amp;mdash; 蘇摩清良 (@soma_arc) &lt;a href=&#34;https://twitter.com/soma_arc/status/1661693568975794178?ref_src=twsrc%5Etfw&#34;&gt;May 25, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;当日の雰囲気は、アフタームービーからよく伝わってきます。&lt;/p&gt;

&lt;p&gt;実際に今回のSESSIONSでも、デモシーンに詳しくない参加者も楽しんで参加している姿を目にすることができました。&lt;/p&gt;

&lt;p&gt;学生や新社会人の若い世代からの参加も多く見られ、これからのSESSIONSの展開が楽しみです！&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/Xyf5op4-hSs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;c4-lanとのコラボレーション&#34;&gt;C4 LANとのコラボレーション&lt;/h2&gt;

&lt;p&gt;今回のSESSIONSは、&lt;a href=&#34;https://c4-lan.com/&#34;&gt;C4 LAN&lt;/a&gt;というLANパーティーの会場内で開催されました。&lt;/p&gt;

&lt;p&gt;C4 LAN全体の様子は、以下のレポートをご覧ください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.mynavi.jp/article/20230505-2672489/&#34;&gt;ゲームイベントとしての認知拡大を目指し、変化を迎えた「C4 LAN 2023 SPRING」レポート | マイナビニュース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.famitsu.com/news/202305/12302398.html&#34;&gt;【C4 LAN】大量のゲーマーがゲーム機持参で勝手に遊ぶだけ。まあまあどうかしてるのに心地いい。ぬるま湯みたいな闇鍋イベントの生存戦略 | ゲーム・エンタメ最新情報のファミ通.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;デモパーティーの起源は海外のLANパーティーだと言われていますので、今回C4 LAN内で開催されたことに運命的なものを感じました。SESSIONSは会場エントランスのすぐそばでしたので、デモパーティーをあまり知らないC4 LANの参加者にも時々立ち寄っていただくことがありました。&lt;/p&gt;

&lt;h2 id=&#34;ハイレベルだったglsl-graphics-compo&#34;&gt;ハイレベルだったGLSL Graphics Compo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://files.scene.org/view/parties/2023/sessions23/results.txt&#34;&gt;Result&lt;/a&gt;の通り、GLSL Graphics Compoの応募はなんと15作品もありました。&lt;/p&gt;

&lt;p&gt;作品の数が多いだけでなく、今年は全体的にレベルが高く、近年のGLSL Graphics Compoのレベルのインフレは狂ってるなと思いました（もちろん良い意味で）。&lt;/p&gt;

&lt;p&gt;さらに複数のシーンから構成され、上映時間も2〜3分ほどの展開があり、まるでPCデモに匹敵するクオリティの作品も複数ありました。&lt;/p&gt;

&lt;p&gt;ぜひアーカイブをご覧ください！&lt;/p&gt;

&lt;div class=&#34;movie-wrap&#34;&gt;
&lt;iframe width=&#34;1920&#34; height=&#34;1080&#34; src=&#34;https://www.youtube.com/embed/F-CbQTcHNrc&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;参加者レポート&#34;&gt;参加者レポート&lt;/h2&gt;

&lt;p&gt;SESSIONS 2023の参加者のレポートや作品の解説などをまとめました。発見次第、随時追加します。&lt;/p&gt;

&lt;h2 id=&#34;combined-pc-demo-compo優勝作品の解説&#34;&gt;Combined PC Demo Compo優勝作品の解説&lt;/h2&gt;

&lt;p&gt;ukonpowerさんによるWebGLを使用した64K IntroがCombined PC Demo Compoで優勝しました。
このスライドではその制作過程や舞台裏について詳しく解説されています。
とくにBlenderを使ったワークフローの紹介や音楽制作の秘話など、非常に興味深い内容でした。ぜひチェックしてみてください！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&amp;quot;ﾃﾞｺﾝﾌﾟﾃｨができるまで&amp;quot;です&lt;a href=&#34;https://t.co/buX0qJg07V&#34;&gt;https://t.co/buX0qJg07V&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;a href=&#34;https://t.co/l8IhsO2wUQ&#34;&gt;pic.twitter.com/l8IhsO2wUQ&lt;/a&gt;&lt;/p&gt;&amp;mdash; ukonpower (@ore_ukonpower) &lt;a href=&#34;https://twitter.com/ore_ukonpower/status/1661713471862636545?ref_src=twsrc%5Etfw&#34;&gt;May 25, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;glsl-graphics-compo優勝作品の解説&#34;&gt;GLSL Graphics Compo優勝作品の解説&lt;/h2&gt;

&lt;p&gt;RenardさんによるGLSL Graphics Compoの優勝作品の解説です。
ApproximateLightという独自の手法を用いたグローバルイルミネーションの計算や、本記事でも解説したMad Tracingの高速化についても紹介されています。
詳細な解説がされており、読み応えがあります。ぜひチェックしてみてください！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;br&gt;&lt;br&gt;こちらの作品の解説記事を書きました！&lt;a href=&#34;https://t.co/da1inuwbPc&#34;&gt;https://t.co/da1inuwbPc&lt;/a&gt; &lt;a href=&#34;https://t.co/6ijOcdD2Jp&#34;&gt;https://t.co/6ijOcdD2Jp&lt;/a&gt; &lt;a href=&#34;https://t.co/uN1COyotzY&#34;&gt;pic.twitter.com/uN1COyotzY&lt;/a&gt;&lt;/p&gt;&amp;mdash; Renard (@Renardealer) &lt;a href=&#34;https://twitter.com/Renardealer/status/1658116543073452034?ref_src=twsrc%5Etfw&#34;&gt;May 15, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&#34;combined-pc-demo-compo-glsl-graphics-compo&#34;&gt;Combined PC Demo Compo / GLSL Graphics Compo&lt;/h2&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;先日の発表資料です。&lt;br&gt;フラクタルとテセレーション&lt;br&gt; | SESSIONS 2023 After Party&lt;a href=&#34;https://t.co/OpRabk2VKa&#34;&gt;https://t.co/OpRabk2VKa&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;/p&gt;&amp;mdash; 蘇摩清良 (@soma_arc) &lt;a href=&#34;https://twitter.com/soma_arc/status/1662817935994540032?ref_src=twsrc%5Etfw&#34;&gt;May 28, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;本日の発表資料（投稿デモの説明）です&lt;br&gt;&lt;br&gt;楽しかった！&lt;a href=&#34;https://t.co/uXKgnPhqza&#34;&gt;https://t.co/uXKgnPhqza&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;/p&gt;&amp;mdash; ukeyshima (@ukeyshima) &lt;a href=&#34;https://twitter.com/ukeyshima/status/1661764148802502661?ref_src=twsrc%5Etfw&#34;&gt;May 25, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;初めてPC Demoを作った話｜Saina &lt;a href=&#34;https://twitter.com/SainaKey?ref_src=twsrc%5Etfw&#34;&gt;@SainaKey&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/note?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#note&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/madewithunity?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#madewithunity&lt;/a&gt;&lt;a href=&#34;https://t.co/x5zzLC5VB2&#34;&gt;https://t.co/x5zzLC5VB2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Saina(さいな) (@SainaKey) &lt;a href=&#34;https://twitter.com/SainaKey/status/1652702468474798081?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;SESSIONSに提出したDemoの音楽を解剖します｜蒼空 / sola &lt;a href=&#34;https://twitter.com/sola_117?ref_src=twsrc%5Etfw&#34;&gt;@sola_117&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/note?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#note&lt;/a&gt; &lt;a href=&#34;https://t.co/XplbBpEnOr&#34;&gt;https://t.co/XplbBpEnOr&lt;/a&gt;&lt;/p&gt;&amp;mdash; 蒼空 / sola (@sola_117) &lt;a href=&#34;https://twitter.com/sola_117/status/1653244428134547457?ref_src=twsrc%5Etfw&#34;&gt;May 2, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;すごい大雑把になりますが、SESSIONS の GLSL Compoで提出した作品についての制作経緯について記事にしました。&lt;a href=&#34;https://t.co/EZHDY1ahJ0&#34;&gt;https://t.co/EZHDY1ahJ0&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/glsl?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#glsl&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt;&lt;/p&gt;&amp;mdash; 独楽回しeddy (@EKey2210) &lt;a href=&#34;https://twitter.com/EKey2210/status/1652660167635501058?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;【補足】&lt;br&gt;・コードには日本語のコメントを書いてあります&lt;br&gt;・ちゃんと壁を通り抜けられないようになっています！&lt;br&gt;・マップはランダムに生成していて、どこまでも続いています！（※浮動小数の精度の許す限り） &lt;a href=&#34;https://t.co/ugBcMKUbQL&#34;&gt;pic.twitter.com/ugBcMKUbQL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kamoshika (@kamoshika_vrc) &lt;a href=&#34;https://twitter.com/kamoshika_vrc/status/1652700446614781952?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;&lt;a href=&#34;https://twitter.com/hashtag/SESSIONS_Party?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SESSIONS_Party&lt;/a&gt; &lt;br&gt;SESSIONSのGLSL compに海賊放送をモチーフにした作品を提出させて頂きました&lt;a href=&#34;https://t.co/DZx5NNzNAJ&#34;&gt;https://t.co/DZx5NNzNAJ&lt;/a&gt; &lt;a href=&#34;https://t.co/HrncS23PrC&#34;&gt;pic.twitter.com/HrncS23PrC&lt;/a&gt;&lt;/p&gt;&amp;mdash; KiNaNkomoti (@Kinakomoti2357) &lt;a href=&#34;https://twitter.com/Kinakomoti2357/status/1652677355901706240?ref_src=twsrc%5Etfw&#34;&gt;April 30, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Just released S͎E͎A͎W͎A͎L͎L͎ &lt;a href=&#34;https://twitter.com/SESSIONS_Party?ref_src=twsrc%5Etfw&#34;&gt;@SESSIONS_Party&lt;/a&gt;, a quick &lt;a href=&#34;https://twitter.com/hashtag/BladeRunner2049?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#BladeRunner2049&lt;/a&gt; inspired shader doodle I did a while back. Check out the final version on &lt;a href=&#34;https://twitter.com/Shadertoy?ref_src=twsrc%5Etfw&#34;&gt;@Shadertoy&lt;/a&gt; ✨: &lt;a href=&#34;https://t.co/ypBZWvp6oD&#34;&gt;https://t.co/ypBZWvp6oD&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/demoscene?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#demoscene&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/shader?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#shader&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/brutalism?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#brutalism&lt;/a&gt; &lt;a href=&#34;https://t.co/WczF1MLuDm&#34;&gt;pic.twitter.com/WczF1MLuDm&lt;/a&gt;&lt;/p&gt;&amp;mdash; LJ (@LJ_1102) &lt;a href=&#34;https://twitter.com/LJ_1102/status/1653088310988881923?ref_src=twsrc%5Etfw&#34;&gt;May 1, 2023&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
